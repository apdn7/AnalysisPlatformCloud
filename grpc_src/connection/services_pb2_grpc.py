# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_src.models import connection_pb2 as grpc__src_dot_models_dot_connection__pb2


class ConnectionStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitializeEdge = channel.unary_unary(
            '/connection.services.Connection/InitializeEdge',
            request_serializer=grpc__src_dot_models_dot_connection__pb2.RequestConnection.SerializeToString,
            response_deserializer=grpc__src_dot_models_dot_connection__pb2.ResponseConnection.FromString,
        )
        self.CheckConnection = channel.unary_unary(
            '/connection.services.Connection/CheckConnection',
            request_serializer=grpc__src_dot_models_dot_connection__pb2.RequestCheckConnection.SerializeToString,
            response_deserializer=grpc__src_dot_models_dot_connection__pb2.ResponseCheckConnection.FromString,
        )


class ConnectionServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitializeEdge(self, request, context):
        """Updates the record and returns repository id if existing, create and returns if not existing."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckConnection(self, request, context):
        """Just a ping to Bridge Server."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConnectionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'InitializeEdge': grpc.unary_unary_rpc_method_handler(
            servicer.InitializeEdge,
            request_deserializer=grpc__src_dot_models_dot_connection__pb2.RequestConnection.FromString,
            response_serializer=grpc__src_dot_models_dot_connection__pb2.ResponseConnection.SerializeToString,
        ),
        'CheckConnection': grpc.unary_unary_rpc_method_handler(
            servicer.CheckConnection,
            request_deserializer=grpc__src_dot_models_dot_connection__pb2.RequestCheckConnection.FromString,
            response_serializer=grpc__src_dot_models_dot_connection__pb2.ResponseCheckConnection.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('connection.services.Connection', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Connection(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitializeEdge(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/connection.services.Connection/InitializeEdge',
            grpc__src_dot_models_dot_connection__pb2.RequestConnection.SerializeToString,
            grpc__src_dot_models_dot_connection__pb2.ResponseConnection.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CheckConnection(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/connection.services.Connection/CheckConnection',
            grpc__src_dot_models_dot_connection__pb2.RequestCheckConnection.SerializeToString,
            grpc__src_dot_models_dot_connection__pb2.ResponseCheckConnection.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
