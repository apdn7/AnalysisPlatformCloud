"""bridge_sprint_190_m_group_m_column_group_table

Revision ID: 45b435f9895f
Revises: 04b7b9ab99f5
Create Date: 2023-07-07 14:32:49.325004

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '45b435f9895f'
down_revision = '04b7b9ab99f5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'm_group',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_group_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'mapping_category_data',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('factor', sa.SmallInteger(), nullable=True),
        sa.Column('t_category_data', sa.Text(), nullable=True),
        sa.Column('group_id', sa.Integer(), nullable=True),
        sa.Column('data_id', sa.Integer(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_column_group',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_id', sa.Integer(), nullable=True),
        sa.Column('group_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['group_id'], ['m_group.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.add_column('semi_master', sa.Column('group_id', sa.Integer(), nullable=False))
    op.drop_column('semi_master', 'data_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('semi_master', sa.Column('data_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.drop_column('semi_master', 'group_id')
    op.drop_table('m_column_group')
    op.drop_table('mapping_category_data')
    op.drop_table('m_group')
    # ### end Alembic commands ###
