"""add auto incremental column

Revision ID: 69b1c076494f
Revises:
Create Date: 2023-04-06 17:02:52.274824

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '69b1c076494f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'archived_config_master',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('table_name', sa.Text(), nullable=True),
        sa.Column('archived_id', sa.Integer(), nullable=True),
        sa.Column('data', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'archived_cycle',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('job_id', sa.Integer(), nullable=True),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('archived_ids', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_constant',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('type', sa.Text(), nullable=True),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('value', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_data_source',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('type', sa.Text(), nullable=True),
        sa.Column('comment', sa.Text(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('master_type', sa.Text(), nullable=True),
        sa.Column('is_direct_import', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_process',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('show_name', sa.Text(), nullable=True),
        sa.Column('comment', sa.Text(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_user_setting',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('repo_id', sa.Integer(), nullable=True),
        sa.Column('key', sa.Text(), nullable=True),
        sa.Column('title', sa.Text(), nullable=True),
        sa.Column('page', sa.Text(), nullable=True),
        sa.Column('created_by', sa.Text(), nullable=True),
        sa.Column('priority', sa.Integer(), nullable=True),
        sa.Column('use_current_time', sa.Boolean(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('share_info', sa.Boolean(), nullable=True),
        sa.Column('save_graph_settings', sa.Boolean(), nullable=True),
        sa.Column('settings', sa.Text(), nullable=True),
        sa.Column('synced', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_config_equation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('eq_type_id', sa.Integer(), nullable=True),
        sa.Column('var_x', sa.Integer(), nullable=True),
        sa.Column('var_y', sa.Integer(), nullable=True),
        sa.Column('var_z', sa.Integer(), nullable=True),
        sa.Column('coe_a', sa.Float(), nullable=True),
        sa.Column('coe_b', sa.Float(), nullable=True),
        sa.Column('coe_c', sa.Float(), nullable=True),
        sa.Column('par_n', sa.Integer(), nullable=True),
        sa.Column('par_k', sa.Integer(), nullable=True),
        sa.Column('par_j', sa.Integer(), nullable=True),
        sa.Column('return_type', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_data',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('data_group_id', sa.Integer(), nullable=True),
        sa.Column('data_type', sa.Text(), nullable=True),
        sa.Column('unit_id', sa.Integer(), nullable=True),
        sa.Column('config_equation_id', sa.Integer(), nullable=True),
        sa.Column('data_factid', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_data_group',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('data_name_jp', sa.Text(), nullable=True),
        sa.Column('data_name_en', sa.Text(), nullable=True),
        sa.Column('data_name_sys', sa.Text(), nullable=True),
        sa.Column('data_name_local', sa.Text(), nullable=True),
        sa.Column('data_abbr_jp', sa.Text(), nullable=True),
        sa.Column('data_abbr_en', sa.Text(), nullable=True),
        sa.Column('data_abbr_local', sa.Text(), nullable=True),
        sa.Column('data_group_type', sa.SmallInteger(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_dept',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('dept_factid', sa.Text(), nullable=True),
        sa.Column('dept_name_jp', sa.Text(), nullable=True),
        sa.Column('dept_name_en', sa.Text(), nullable=True),
        sa.Column('dept_name_sys', sa.Text(), nullable=True),
        sa.Column('dept_name_local', sa.Text(), nullable=True),
        sa.Column('dept_abbr_jp', sa.Text(), nullable=True),
        sa.Column('dept_abbr_en', sa.Text(), nullable=True),
        sa.Column('dept_abbr_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_equip',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('equip_group_id', sa.Integer(), nullable=True),
        sa.Column('equip_no', sa.SmallInteger(), nullable=True),
        sa.Column('equip_sign', sa.Text(), nullable=True),
        sa.Column('equip_factid', sa.Text(), nullable=True),
        sa.Column('equip_product_no', sa.Text(), nullable=True),
        sa.Column('equip_product_date', sa.TIMESTAMP(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_equip_group',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('equip_name_jp', sa.Text(), nullable=True),
        sa.Column('equip_name_en', sa.Text(), nullable=True),
        sa.Column('equip_name_sys', sa.Text(), nullable=True),
        sa.Column('equip_name_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_factory',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('factory_factid', sa.Text(), nullable=True),
        sa.Column('factory_name_jp', sa.Text(), nullable=True),
        sa.Column('factory_name_en', sa.Text(), nullable=True),
        sa.Column('factory_name_sys', sa.Text(), nullable=True),
        sa.Column('factory_name_local', sa.Text(), nullable=True),
        sa.Column('location_id', sa.Integer(), nullable=True),
        sa.Column('factory_abbr_jp', sa.Text(), nullable=True),
        sa.Column('factory_abbr_en', sa.Text(), nullable=True),
        sa.Column('factory_abbr_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_function',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('function_type', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_line',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('plant_id', sa.Integer(), nullable=True),
        sa.Column('prod_family_id', sa.Integer(), nullable=True),
        sa.Column('line_group_id', sa.Integer(), nullable=True),
        sa.Column('line_factid', sa.Text(), nullable=True),
        sa.Column('line_no', sa.SmallInteger(), nullable=True),
        sa.Column('line_sign', sa.Text(), nullable=True),
        sa.Column('outsourcing_flag', sa.Boolean(), nullable=True),
        sa.Column('outsource', sa.Text(), nullable=True),
        sa.Column('supplier', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_line_group',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('line_name_jp', sa.Text(), nullable=True),
        sa.Column('line_name_en', sa.Text(), nullable=True),
        sa.Column('line_name_sys', sa.Text(), nullable=True),
        sa.Column('line_name_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_location',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('location_name_jp', sa.Text(), nullable=True),
        sa.Column('location_name_en', sa.Text(), nullable=True),
        sa.Column('location_name_sys', sa.Text(), nullable=True),
        sa.Column('location_abbr', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_part',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('part_type_id', sa.Integer(), nullable=True),
        sa.Column('part_factid', sa.Text(), nullable=True),
        sa.Column('part_no', sa.Text(), nullable=True),
        sa.Column('part_use', sa.Boolean(), nullable=True),
        sa.Column('location_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_part_type',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('part_type_factid', sa.Text(), nullable=True),
        sa.Column('part_name_jp', sa.Text(), nullable=True),
        sa.Column('part_name_en', sa.Text(), nullable=True),
        sa.Column('part_name_local', sa.Text(), nullable=True),
        sa.Column('assy_flag', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_plant',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('factory_id', sa.Integer(), nullable=True),
        sa.Column('plant_factid', sa.Text(), nullable=True),
        sa.Column('plant_name_jp', sa.Text(), nullable=True),
        sa.Column('plant_name_en', sa.Text(), nullable=True),
        sa.Column('plant_name_sys', sa.Text(), nullable=True),
        sa.Column('plant_name_local', sa.Text(), nullable=True),
        sa.Column('plant_abbr_jp', sa.Text(), nullable=True),
        sa.Column('plant_abbr_en', sa.Text(), nullable=True),
        sa.Column('plant_abbr_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_process',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('prod_family_id', sa.Integer(), nullable=True),
        sa.Column('process_factid', sa.Text(), nullable=True),
        sa.Column('process_name_jp', sa.Text(), nullable=True),
        sa.Column('process_name_en', sa.Text(), nullable=True),
        sa.Column('process_name_sys', sa.Text(), nullable=True),
        sa.Column('process_name_local', sa.Text(), nullable=True),
        sa.Column('process_abbr_jp', sa.Text(), nullable=True),
        sa.Column('process_abbr_en', sa.Text(), nullable=True),
        sa.Column('process_abbr_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_prod',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('prod_family_id', sa.Integer(), nullable=True),
        sa.Column('prod_name_jp', sa.Text(), nullable=True),
        sa.Column('prod_name_en', sa.Text(), nullable=True),
        sa.Column('prod_name_sys', sa.Text(), nullable=True),
        sa.Column('prod_name_local', sa.Text(), nullable=True),
        sa.Column('prod_abbr_jp', sa.Text(), nullable=True),
        sa.Column('prod_abbr_en', sa.Text(), nullable=True),
        sa.Column('prod_abbr_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_prod_family',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('prod_factid', sa.Text(), nullable=True),
        sa.Column('prod_family_name_jp', sa.Text(), nullable=True),
        sa.Column('prod_family_name_en', sa.Text(), nullable=True),
        sa.Column('prod_family_name_sys', sa.Text(), nullable=True),
        sa.Column('prod_family_name_local', sa.Text(), nullable=True),
        sa.Column('prod_family_abbr_jp', sa.Text(), nullable=True),
        sa.Column('prod_family_abbr_en', sa.Text(), nullable=True),
        sa.Column('prod_family_abbr_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_sect',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('dept_id', sa.Integer(), nullable=True),
        sa.Column('sect_factid', sa.Text(), nullable=True),
        sa.Column('sect_name_jp', sa.Text(), nullable=True),
        sa.Column('sect_name_en', sa.Text(), nullable=True),
        sa.Column('sect_name_sys', sa.Text(), nullable=True),
        sa.Column('sect_name_local', sa.Text(), nullable=True),
        sa.Column('sect_abbr_jp', sa.Text(), nullable=True),
        sa.Column('sect_abbr_en', sa.Text(), nullable=True),
        sa.Column('sect_abbr_local', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_st',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('equip_id', sa.Integer(), nullable=True),
        sa.Column('st_no', sa.SmallInteger(), nullable=True),
        sa.Column('st_sign', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'm_unit',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('quantity_jp', sa.Text(), nullable=True),
        sa.Column('quantity_en', sa.Text(), nullable=True),
        sa.Column('unit', sa.Text(), nullable=True),
        sa.Column('type', sa.Text(), nullable=True),
        sa.Column('base', sa.Integer(), nullable=True),
        sa.Column('conversion', sa.Float(), nullable=True),
        sa.Column('denominator', sa.Float(), nullable=True),
        sa.Column('offset', sa.Float(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'mapping_factory_machine',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('t_line_id', sa.Text(), nullable=True),
        sa.Column('t_line_name', sa.Text(), nullable=True),
        sa.Column('t_equip_id', sa.Text(), nullable=True),
        sa.Column('t_equip_name', sa.Text(), nullable=True),
        sa.Column('t_process_id', sa.Text(), nullable=True),
        sa.Column('t_process_name', sa.Text(), nullable=True),
        sa.Column('t_dept_id', sa.Text(), nullable=True),
        sa.Column('t_dept_name', sa.Text(), nullable=True),
        sa.Column('t_factory_id', sa.Text(), nullable=True),
        sa.Column('t_factory_name', sa.Text(), nullable=True),
        sa.Column('t_plant_id', sa.Text(), nullable=True),
        sa.Column('t_plant_name', sa.Text(), nullable=True),
        sa.Column('factory_machine_id', sa.Integer(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'mapping_part',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('t_part_no', sa.Text(), nullable=True),
        sa.Column('part_id', sa.Integer(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'mapping_process_data',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('t_process_id', sa.Text(), nullable=True),
        sa.Column('t_process_name', sa.Text(), nullable=True),
        sa.Column('t_quality_id', sa.Text(), nullable=True),
        sa.Column('t_quality_name', sa.Text(), nullable=True),
        sa.Column('data_id', sa.Integer(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'r_factory_machine',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('line_id', sa.Integer(), nullable=True),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('equip_id', sa.Integer(), nullable=True),
        sa.Column('equip_st', sa.Integer(), nullable=True),
        sa.Column('sect_id', sa.Integer(), nullable=True),
        sa.Column('st_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'r_prod_part',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('prod_id', sa.Integer(), nullable=True),
        sa.Column('part_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'semi_master',
        sa.Column('factor', sa.SmallInteger(), nullable=False),
        sa.Column('data_id', sa.Integer(), nullable=False),
        sa.Column('value_text', sa.Text(), nullable=True),
        sa.Column('value_int', sa.Integer(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('factor', 'data_id'),
    )
    op.create_table(
        't_abnormal_trace_log',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('date_time', sa.TIMESTAMP(), nullable=True),
        sa.Column('dataset_id', sa.Integer(), autoincrement=True, nullable=True),
        sa.Column('log_level', sa.Text(), nullable=True),
        sa.Column('event_type', sa.Text(), nullable=True),
        sa.Column('event_action', sa.Text(), nullable=True),
        sa.Column('location', sa.Text(), nullable=True),
        sa.Column('return_code', sa.Text(), nullable=True),
        sa.Column('message', sa.Text(), nullable=True),
        sa.Column('dumpfile', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        't_app_log',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('ip', sa.Text(), nullable=True),
        sa.Column('action', sa.Text(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        't_column_group',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('col_group_id', sa.SmallInteger(), nullable=False),
        sa.Column('data_type', sa.Text(), nullable=False),
        sa.Column('col_01', sa.Integer(), nullable=True),
        sa.Column('col_02', sa.Integer(), nullable=True),
        sa.Column('col_03', sa.Integer(), nullable=True),
        sa.Column('col_04', sa.Integer(), nullable=True),
        sa.Column('col_05', sa.Integer(), nullable=True),
        sa.Column('col_06', sa.Integer(), nullable=True),
        sa.Column('col_07', sa.Integer(), nullable=True),
        sa.Column('col_08', sa.Integer(), nullable=True),
        sa.Column('col_09', sa.Integer(), nullable=True),
        sa.Column('col_10', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'col_group_id', 'data_type'),
    )
    op.create_table(
        't_csv_import',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('job_id', sa.Integer(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('file_name', sa.Text(), nullable=True),
        sa.Column('start_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('end_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('imported_row', sa.Integer(), nullable=True),
        sa.Column('status', sa.Text(), nullable=True),
        sa.Column('error_msg', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_index(op.f('ix_t_csv_import_job_id'), 't_csv_import', ['job_id'], unique=False)
    op.create_index(
        'ix_t_csv_import_process_id_status_file_name',
        't_csv_import',
        ['process_id', 'status', 'file_name'],
        unique=False,
    )
    op.create_table(
        't_csv_management',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('file_name', sa.Text(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.Column('data_time', sa.SmallInteger(), nullable=True),
        sa.Column('data_process', sa.Text(), nullable=True),
        sa.Column('data_line', sa.Text(), nullable=True),
        sa.Column('data_delimiter', sa.Text(), nullable=True),
        sa.Column('data_encoding', sa.Text(), nullable=True),
        sa.Column('data_size', sa.Float(), nullable=True),
        sa.Column('scan_status', sa.Boolean(), nullable=True),
        sa.Column('dump_status', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        't_cycle_id',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('latest_cycle_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('process_id'),
    )
    op.create_table(
        't_data_datetime',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('col_group_id', sa.SmallInteger(), nullable=False),
        sa.Column('val_01', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_02', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_03', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_04', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_05', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_06', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_07', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_08', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_09', sa.TIMESTAMP(), nullable=True),
        sa.Column('val_10', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id'),
        postgresql_partition_by='LIST (process_id)',
    )
    op.create_table(
        't_data_float',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('col_group_id', sa.SmallInteger(), nullable=False),
        sa.Column('val_01', sa.Float(), nullable=True),
        sa.Column('val_02', sa.Float(), nullable=True),
        sa.Column('val_03', sa.Float(), nullable=True),
        sa.Column('val_04', sa.Float(), nullable=True),
        sa.Column('val_05', sa.Float(), nullable=True),
        sa.Column('val_06', sa.Float(), nullable=True),
        sa.Column('val_07', sa.Float(), nullable=True),
        sa.Column('val_08', sa.Float(), nullable=True),
        sa.Column('val_09', sa.Float(), nullable=True),
        sa.Column('val_10', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id'),
        postgresql_partition_by='LIST (process_id)',
    )
    op.create_table(
        't_data_int',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('col_group_id', sa.SmallInteger(), nullable=False),
        sa.Column('val_01', sa.Integer(), nullable=True),
        sa.Column('val_02', sa.Integer(), nullable=True),
        sa.Column('val_03', sa.Integer(), nullable=True),
        sa.Column('val_04', sa.Integer(), nullable=True),
        sa.Column('val_05', sa.Integer(), nullable=True),
        sa.Column('val_06', sa.Integer(), nullable=True),
        sa.Column('val_07', sa.Integer(), nullable=True),
        sa.Column('val_08', sa.Integer(), nullable=True),
        sa.Column('val_09', sa.Integer(), nullable=True),
        sa.Column('val_10', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id'),
        postgresql_partition_by='LIST (process_id)',
    )
    op.create_table(
        't_data_text',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('col_group_id', sa.SmallInteger(), nullable=False),
        sa.Column('val_01', sa.Text(), nullable=True),
        sa.Column('val_02', sa.Text(), nullable=True),
        sa.Column('val_03', sa.Text(), nullable=True),
        sa.Column('val_04', sa.Text(), nullable=True),
        sa.Column('val_05', sa.Text(), nullable=True),
        sa.Column('val_06', sa.Text(), nullable=True),
        sa.Column('val_07', sa.Text(), nullable=True),
        sa.Column('val_08', sa.Text(), nullable=True),
        sa.Column('val_09', sa.Text(), nullable=True),
        sa.Column('val_10', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id'),
        postgresql_partition_by='LIST (process_id)',
    )
    op.create_table(
        't_data_trace_log',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('date_time', sa.TIMESTAMP(), nullable=True),
        sa.Column('dataset_id', sa.Integer(), nullable=True),
        sa.Column('event_type', sa.Text(), nullable=True),
        sa.Column('event_action', sa.Text(), nullable=True),
        sa.Column('target', sa.Text(), nullable=True),
        sa.Column('exe_time', sa.Integer(), nullable=True),
        sa.Column('data_size', sa.BigInteger(), nullable=True),
        sa.Column('rows', sa.Integer(), nullable=True),
        sa.Column('cols', sa.Integer(), nullable=True),
        sa.Column('dumpfile', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        't_data_type_category',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('col_group_id', sa.SmallInteger(), nullable=False),
        sa.Column('val_01', sa.SmallInteger(), nullable=True),
        sa.Column('val_02', sa.SmallInteger(), nullable=True),
        sa.Column('val_03', sa.SmallInteger(), nullable=True),
        sa.Column('val_04', sa.SmallInteger(), nullable=True),
        sa.Column('val_05', sa.SmallInteger(), nullable=True),
        sa.Column('val_06', sa.SmallInteger(), nullable=True),
        sa.Column('val_07', sa.SmallInteger(), nullable=True),
        sa.Column('val_08', sa.SmallInteger(), nullable=True),
        sa.Column('val_09', sa.SmallInteger(), nullable=True),
        sa.Column('val_10', sa.SmallInteger(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id'),
        postgresql_partition_by='LIST (process_id)',
    )
    op.create_table(
        't_factory_import',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('job_id', sa.Integer(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('import_type', sa.Text(), nullable=True),
        sa.Column('import_from', sa.Text(), nullable=True),
        sa.Column('import_to', sa.Text(), nullable=True),
        sa.Column('cycle_start_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('cycle_end_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('start_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('end_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('imported_row', sa.Integer(), nullable=True),
        sa.Column('imported_cycle_id', sa.Integer(), nullable=True),
        sa.Column('is_duplicate_checked', sa.Boolean(), nullable=True),
        sa.Column('synced', sa.Boolean(), nullable=True),
        sa.Column('status', sa.Text(), nullable=True),
        sa.Column('error_msg', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_index(op.f('ix_t_factory_import_job_id'), 't_factory_import', ['job_id'], unique=False)
    op.create_table(
        't_job_lock',
        sa.Column('job_name', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('job_name'),
    )
    op.create_table(
        't_job_management',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('job_type', sa.Text(), nullable=True),
        sa.Column('data_source_id', sa.Integer(), nullable=True),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.Column('db_code', sa.Text(), nullable=True),
        sa.Column('db_name', sa.Text(), nullable=True),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('process_name', sa.Text(), nullable=True),
        sa.Column('start_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('end_tm', sa.TIMESTAMP(), nullable=True),
        sa.Column('status', sa.Text(), nullable=True),
        sa.Column('done_percent', sa.Float(), nullable=True),
        sa.Column('duration', sa.Float(), nullable=True),
        sa.Column('error_msg', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        't_master_data',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('factory_machine_id', sa.Integer(), nullable=True),
        sa.Column('prod_part_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id'),
        postgresql_partition_by='LIST(process_id)',
    )
    op.create_table(
        't_proc_link',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('link_key', sa.Text(), nullable=False),
        sa.Column('link_value', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'link_key'),
        postgresql_partition_by='LIST(process_id)',
    )
    op.create_index(op.f('ix_t_proc_link_link_value'), 't_proc_link', ['link_value'], unique=False)
    op.create_table(
        'cfg_data_source_csv',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('directory', sa.Text(), nullable=True),
        sa.Column('skip_head', sa.Integer(), nullable=True),
        sa.Column('skip_tail', sa.Integer(), nullable=True),
        sa.Column('delimiter', sa.Text(), nullable=True),
        sa.Column('etl_func', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['id'], ['cfg_data_source.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_data_source_db',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('host', sa.Text(), nullable=True),
        sa.Column('port', sa.Integer(), nullable=True),
        sa.Column('dbname', sa.Text(), nullable=True),
        sa.Column('schema', sa.Text(), nullable=True),
        sa.Column('username', sa.Text(), nullable=True),
        sa.Column('password', sa.Text(), nullable=True),
        sa.Column('hashed', sa.Boolean(), nullable=True),
        sa.Column('use_os_timezone', sa.Boolean(), nullable=True),
        sa.Column('master_type', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['id'], ['cfg_data_source.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_data_table',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('data_source_id', sa.Integer(), nullable=True),
        sa.Column('partition_from', sa.Text(), nullable=True),
        sa.Column('partition_to', sa.Text(), nullable=True),
        sa.Column('table_name', sa.Text(), nullable=True),
        sa.Column('comment', sa.Text(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['data_source_id'], ['cfg_data_source.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_process_column',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('column_name', sa.Text(), nullable=True),
        sa.Column('english_name', sa.Text(), nullable=True),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('data_type', sa.Text(), nullable=True),
        sa.Column('predict_type', sa.Text(), nullable=True),
        sa.Column('operator', sa.Text(), nullable=True),
        sa.Column('coef', sa.Text(), nullable=True),
        sa.Column('column_type', sa.Integer(), nullable=True),
        sa.Column('is_serial_no', sa.Boolean(), nullable=True),
        sa.Column('is_get_date', sa.Boolean(), nullable=True),
        sa.Column('is_dummy_datetime', sa.Boolean(), nullable=True),
        sa.Column('is_auto_increment', sa.Boolean(), nullable=True),
        sa.Column('is_linking_column', sa.Boolean(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('master_type', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['process_id'], ['cfg_process.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_trace',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('self_process_id', sa.Integer(), nullable=True),
        sa.Column('target_process_id', sa.Integer(), nullable=True),
        sa.Column('is_trace_backward', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['self_process_id'], ['cfg_process.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['target_process_id'], ['cfg_process.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        't_proc_data_count',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('datetime', sa.TIMESTAMP(), nullable=True),
        sa.Column('job_id', sa.Integer(), nullable=True),
        sa.Column('count', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['process_id'], ['cfg_process.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        't_proc_link_count',
        sa.Column('process_id', sa.Integer(), nullable=False),
        sa.Column('target_process_id', sa.Integer(), nullable=False),
        sa.Column('matched_count', sa.Integer(), nullable=True),
        sa.Column('job_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(
            ['job_id'],
            ['t_job_management.id'],
        ),
        sa.PrimaryKeyConstraint('process_id', 'target_process_id'),
    )
    op.create_index(op.f('ix_t_proc_link_count_job_id'), 't_proc_link_count', ['job_id'], unique=False)
    op.create_table(
        'cfg_csv_column',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_source_id', sa.Integer(), nullable=True),
        sa.Column('column_name', sa.Text(), nullable=True),
        sa.Column('data_type', sa.Text(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['data_source_id'], ['cfg_data_source_csv.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_data_table_column',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.Column('column_name', sa.Text(), nullable=True),
        sa.Column('english_name', sa.Text(), nullable=True),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('data_type', sa.Text(), nullable=True),
        sa.Column('data_group_type', sa.SmallInteger(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['data_table_id'], ['cfg_data_table.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_filter',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('repo_id', sa.Integer(), nullable=True),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('column_id', sa.Integer(), nullable=True),
        sa.Column('filter_type', sa.Text(), nullable=True),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['column_id'], ['cfg_process_column.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['parent_id'], ['cfg_filter.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['process_id'], ['cfg_process.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_partition_table',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('data_table_id', sa.Integer(), nullable=True),
        sa.Column('table_name', sa.Text(), nullable=True),
        sa.Column('partition_time', sa.Text(), nullable=True),
        sa.Column('min_time', sa.Text(), nullable=True),
        sa.Column('max_time', sa.Text(), nullable=True),
        sa.Column('job_done', sa.Text(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['data_table_id'], ['cfg_data_table.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_trace_key',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('repo_id', sa.Integer(), nullable=True),
        sa.Column('trace_id', sa.Integer(), nullable=True),
        sa.Column('self_column_id', sa.Integer(), nullable=True),
        sa.Column('self_column_substr_from', sa.Integer(), nullable=True),
        sa.Column('self_column_substr_to', sa.Integer(), nullable=True),
        sa.Column('target_column_id', sa.Integer(), nullable=True),
        sa.Column('target_column_substr_from', sa.Integer(), nullable=True),
        sa.Column('target_column_substr_to', sa.Integer(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['self_column_id'], ['cfg_process_column.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['target_column_id'], ['cfg_process_column.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['trace_id'], ['cfg_trace.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_filter_detail',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('repo_id', sa.Integer(), nullable=True),
        sa.Column('filter_id', sa.Integer(), nullable=True),
        sa.Column('parent_detail_id', sa.Integer(), nullable=True),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('filter_condition', sa.Text(), nullable=True),
        sa.Column('filter_function', sa.Text(), nullable=True),
        sa.Column('filter_from_pos', sa.Integer(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['filter_id'], ['cfg_filter.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['parent_detail_id'], ['cfg_filter_detail.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    op.create_table(
        'cfg_visualization',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('repo_id', sa.Integer(), nullable=True),
        sa.Column('process_id', sa.Integer(), nullable=True),
        sa.Column('control_column_id', sa.Integer(), nullable=True),
        sa.Column('filter_column_id', sa.Integer(), nullable=True),
        sa.Column('filter_value', sa.Text(), nullable=True),
        sa.Column('is_from_data', sa.Boolean(), nullable=True),
        sa.Column('filter_detail_id', sa.Integer(), nullable=True),
        sa.Column('ucl', sa.Float(), nullable=True),
        sa.Column('lcl', sa.Float(), nullable=True),
        sa.Column('upcl', sa.Float(), nullable=True),
        sa.Column('lpcl', sa.Float(), nullable=True),
        sa.Column('ymax', sa.Float(), nullable=True),
        sa.Column('ymin', sa.Float(), nullable=True),
        sa.Column('act_from', sa.Text(), nullable=True),
        sa.Column('act_to', sa.Text(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(['control_column_id'], ['cfg_process_column.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['filter_column_id'], ['cfg_process_column.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['filter_detail_id'], ['cfg_filter_detail.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['process_id'], ['cfg_process.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cfg_visualization')
    op.drop_table('cfg_filter_detail')
    op.drop_table('cfg_trace_key')
    op.drop_table('cfg_partition_table')
    op.drop_table('cfg_filter')
    op.drop_table('cfg_data_table_column')
    op.drop_table('cfg_csv_column')
    op.drop_index(op.f('ix_t_proc_link_count_job_id'), table_name='t_proc_link_count')
    op.drop_table('t_proc_link_count')
    op.drop_table('t_proc_data_count')
    op.drop_table('cfg_trace')
    op.drop_table('cfg_process_column')
    op.drop_table('cfg_data_table')
    op.drop_table('cfg_data_source_db')
    op.drop_table('cfg_data_source_csv')
    op.drop_index(op.f('ix_t_proc_link_link_value'), table_name='t_proc_link')
    op.drop_table('t_proc_link')
    op.drop_table('t_master_data')
    op.drop_table('t_job_management')
    op.drop_table('t_job_lock')
    op.drop_index(op.f('ix_t_factory_import_job_id'), table_name='t_factory_import')
    op.drop_table('t_factory_import')
    op.drop_table('t_data_type_category')
    op.drop_table('t_data_trace_log')
    op.drop_table('t_data_text')
    op.drop_table('t_data_int')
    op.drop_table('t_data_float')
    op.drop_table('t_data_datetime')
    op.drop_table('t_cycle_id')
    op.drop_table('t_csv_management')
    op.drop_index('ix_t_csv_import_process_id_status_file_name', table_name='t_csv_import')
    op.drop_index(op.f('ix_t_csv_import_job_id'), table_name='t_csv_import')
    op.drop_table('t_csv_import')
    op.drop_table('t_column_group')
    op.drop_table('t_app_log')
    op.drop_table('t_abnormal_trace_log')
    op.drop_table('semi_master')
    op.drop_table('r_prod_part')
    op.drop_table('r_factory_machine')
    op.drop_table('mapping_process_data')
    op.drop_table('mapping_part')
    op.drop_table('mapping_factory_machine')
    op.drop_table('m_unit')
    op.drop_table('m_st')
    op.drop_table('m_sect')
    op.drop_table('m_prod_family')
    op.drop_table('m_prod')
    op.drop_table('m_process')
    op.drop_table('m_plant')
    op.drop_table('m_part_type')
    op.drop_table('m_part')
    op.drop_table('m_location')
    op.drop_table('m_line_group')
    op.drop_table('m_line')
    op.drop_table('m_function')
    op.drop_table('m_factory')
    op.drop_table('m_equip_group')
    op.drop_table('m_equip')
    op.drop_table('m_dept')
    op.drop_table('m_data_group')
    op.drop_table('m_data')
    op.drop_table('m_config_equation')
    op.drop_table('cfg_user_setting')
    op.drop_table('cfg_process')
    op.drop_table('cfg_data_source')
    op.drop_table('cfg_constant')
    op.drop_table('archived_cycle')
    op.drop_table('archived_config_master')
    # ### end Alembic commands ###
