"""Change data type same ES

Revision ID: 69f8eb387b87
Revises: 91a8d55fbd39
Create Date: 2024-06-27 13:40:12.977552

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import Session

from ap.setting_module.models import MFunction

# revision identifiers, used by Alembic.
revision = '69f8eb387b87'
down_revision = '91a8d55fbd39'
branch_labels = None
depends_on = None
dict_rename_data_type = {
    'i': 'INTEGER',
    'r': 'REAL',
    't': 'TEXT',
    'd': 'DATETIME',
    'b': 'BOOLEAN',
    'b_i': 'BIG_INT',
    'date': 'DATE',
    'time': 'TIME',
    's_i': 'SMALL_INT',
    'T': 'CATEGORY',
}


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    m_function_count = conn.execute(sa.text('select count(*) from m_function')).fetchone()[0]
    # only migrate when `m_function` has existing data
    session = Session(bind=conn)
    if m_function_count > 0:
        session.query(MFunction).delete()

    # delete all existing records
    for old_data_type, new_data_type in dict_rename_data_type.items():
        op.execute(
            f'''
            UPDATE m_data SET data_type = '{new_data_type}' where data_type = '{old_data_type}';
            ''',
        )
        op.execute(
            f'''
            UPDATE cfg_process_column SET data_type = '{new_data_type}' where data_type = '{old_data_type}';
            ''',
        )
        op.execute(
            f'''
            UPDATE cfg_process_column SET raw_data_type = '{new_data_type}' where raw_data_type = '{old_data_type}';
            ''',
        )
        op.execute(
            f'''
            UPDATE cfg_process_function_column SET return_type = '{new_data_type}'
            where return_type = '{old_data_type}';
            ''',
        )

    # update
    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    session = Session(bind=conn)
    # delete all existing records
    for old_data_type, new_data_type in dict_rename_data_type.items():
        op.execute(
            f'''
            UPDATE m_data SET data_type = '{old_data_type}' where data_type = '{new_data_type}';
            ''',
        )
        op.execute(
            f'''
            UPDATE cfg_process_column SET data_type = '{old_data_type}' where data_type = '{new_data_type}';
            ''',
        )
        op.execute(
            f'''
            UPDATE cfg_process_column SET raw_data_type = '{old_data_type}' where raw_data_type = '{new_data_type}';
            ''',
        )
        op.execute(
            f'''
            UPDATE cfg_process_function_column SET return_type = '{old_data_type}'
            where return_type = '{new_data_type}';
            ''',
        )

    # update
    session.commit()
    # ### end Alembic commands ###
