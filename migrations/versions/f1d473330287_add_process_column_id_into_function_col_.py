"""add_process_column_id_into_function_col_table

Revision ID: f1d473330287
Revises: a446042efa10
Create Date: 2024-05-17 16:43:29.912552

"""
import sqlalchemy as sa
from alembic import op

from ap.setting_module.models import CfgProcessColumn, CfgProcessFunctionColumn

# revision identifiers, used by Alembic.
revision = 'f1d473330287'
down_revision = '552ec6745e3e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('cfg_process_column', 'column_raw_name', existing_type=sa.TEXT(), nullable=False)
    op.add_column('cfg_process_function_column', sa.Column('process_column_id', sa.Integer(), nullable=True))
    op.drop_constraint('cfg_process_function_column_id_fkey', 'cfg_process_function_column', type_='foreignkey')
    op.create_foreign_key(
        'cfg_process_function_column_process_column_id_fkey',
        'cfg_process_function_column',
        'cfg_process_column',
        ['process_column_id'],
        ['id'],
        ondelete='CASCADE',
    )

    conn = op.get_bind()
    # update process_column_id in cfg_process_function_column
    conn.execute(
        sa.text(
            f'''update {CfgProcessFunctionColumn.get_table_name()}
            set {CfgProcessFunctionColumn.process_column_id.key}={CfgProcessFunctionColumn.id.key}''',
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Delete all function columns
    conn = op.get_bind()
    process_column_ids = [
        x[0]
        for x in conn.execute(
            sa.text(
                f'''select {CfgProcessFunctionColumn.process_column_id.key}
                from {CfgProcessFunctionColumn.get_table_name()}''',
            ),
        ).fetchall()
    ]
    if process_column_ids:
        condition = ','.join({str(process_column_id) for process_column_id in process_column_ids})
        conn.execute(
            sa.text(
                f'''delete from {CfgProcessFunctionColumn.get_table_name()}
                where {CfgProcessFunctionColumn.process_column_id.key} in ({condition})''',
            ),
        )
        conn.execute(
            sa.text(
                f'delete from {CfgProcessColumn.get_table_name()} where {CfgProcessColumn.id.key} in ({condition})',
            ),
        )

    op.drop_constraint(
        'cfg_process_function_column_process_column_id_fkey',
        'cfg_process_function_column',
        type_='foreignkey',
    )
    op.create_foreign_key(
        'cfg_process_function_column_id_fkey',
        'cfg_process_function_column',
        'cfg_process_column',
        ['id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.drop_column('cfg_process_function_column', 'process_column_id')
    op.alter_column('cfg_process_column', 'column_raw_name', existing_type=sa.TEXT(), nullable=True)
    # ### end Alembic commands ###
