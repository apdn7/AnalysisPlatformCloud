"""Add data_source_id in table t_process

Revision ID: 584add40584b
Revises: 7b4274b851ac
Create Date: 2024-03-05 10:34:36.385066

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '584add40584b'
down_revision = '7b4274b851ac'
branch_labels = None
depends_on = None


def collect_transaction_tables(operation):
    conn = operation.get_bind()
    collect_transaction_table_name_sql = '''
SELECT c.relname FROM pg_class AS c
WHERE NOT EXISTS (SELECT 1 FROM pg_inherits AS i WHERE i.inhrelid = c.oid)
AND c.relkind IN ('r', 'p')
AND regexp_like(c.relName, 't_process_', 'i');'''
    cur = conn.execute(collect_transaction_table_name_sql)
    t_process_tables = []
    rows = cur.fetchall()
    for row in rows:
        t_process_tables.append(row[0])

    return t_process_tables


def check_column_exist(operation, table_name, column_name):
    conn = operation.get_bind()
    cur = conn.execute(
        f'''
SELECT COUNT(*) FROM information_schema.columns
WHERE table_name = '{table_name}' and column_name = '{column_name}'
    ''',
    )
    rows = cur.fetchall()
    return rows[0][0] == 1


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    t_process_tables = collect_transaction_tables(op)
    for t_process_table in t_process_tables:
        if not check_column_exist(op, t_process_table, 'data_source_id'):
            op.add_column(t_process_table, sa.Column('data_source_id', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    t_process_tables = collect_transaction_tables(op)
    for t_process_table in t_process_tables:
        if check_column_exist(op, t_process_table, 'data_source_id'):
            op.drop_column(t_process_table, 'data_source_id')
    # ### end Alembic commands ###
