"""Add name_en, name_jp, name_local. Remove name and english_name

Revision ID: 8063f4762a43
Revises: e7d4dae0243e
Create Date: 2023-11-14 17:31:27.736863

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import Session

from ap.common.services.jp_to_romaji_utils import to_romaji
from ap.setting_module.models import CfgProcess, CfgProcessColumn

# revision identifiers, used by Alembic.
revision = '8063f4762a43'
down_revision = 'c26254955074'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())

    # these columns in cfg_data_table_column will be deleted later
    op.add_column('cfg_data_table_column', sa.Column('name_en', sa.Text(), nullable=True))
    op.add_column('cfg_data_table_column', sa.Column('name_jp', sa.Text(), nullable=True))
    op.add_column('cfg_data_table_column', sa.Column('name_local', sa.Text(), nullable=True))
    op.drop_column('cfg_data_table_column', 'name')
    op.drop_column('cfg_data_table_column', 'english_name')

    op.add_column('cfg_process', sa.Column('name_en', sa.Text(), nullable=True))
    op.add_column('cfg_process', sa.Column('name_jp', sa.Text(), nullable=True))
    op.add_column('cfg_process', sa.Column('name_local', sa.Text(), nullable=True))
    op.add_column('cfg_process_column', sa.Column('name_en', sa.Text(), nullable=True))
    op.add_column('cfg_process_column', sa.Column('name_jp', sa.Text(), nullable=True))
    op.add_column('cfg_process_column', sa.Column('name_local', sa.Text(), nullable=True))

    new_process_table = sa.Table(
        CfgProcess.__tablename__,
        sa.MetaData(),
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name_en', sa.Text()),
        sa.Column('name_jp', sa.Text()),
        sa.Column('name_local', sa.Text()),
    )
    processes = session.query(CfgProcess.id, CfgProcess.name).order_by(CfgProcess.id).all()
    for process_id, process_name in processes:
        op.execute(
            new_process_table.update()
            .where(new_process_table.c.id == process_id)
            .values(
                {
                    'name_jp': process_name,
                    'name_en': to_romaji(process_name),
                    'name_local': None,
                },
            ),
        )

    # create view because we need english_name and name, which will be deleted
    process_column_table = sa.Table(
        CfgProcessColumn.__tablename__,
        sa.MetaData(),
        sa.Column('name', sa.Text()),
        sa.Column('english_name', sa.Text()),
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name_en', sa.Text()),
        sa.Column('name_jp', sa.Text()),
        sa.Column('name_local', sa.Text()),
    )
    process_columns = session.query(process_column_table).order_by(CfgProcessColumn.id).all()

    for process_column in process_columns:
        op.execute(
            process_column_table.update()
            .where(process_column_table.c.id == process_column.id)
            .values({'name_en': process_column.english_name, 'name_jp': process_column.name, 'name_local': None}),
        )

    session.commit()

    op.drop_column('cfg_process_column', 'name')
    op.drop_column('cfg_process_column', 'english_name')

    op.create_index(op.f('ix_t_proc_data_count_process_id'), 't_proc_data_count', ['process_id'], unique=False)
    op.drop_constraint('t_proc_data_count_process_id_fkey', 't_proc_data_count', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    session = Session(bind=op.get_bind())

    op.create_foreign_key(
        't_proc_data_count_process_id_fkey',
        't_proc_data_count',
        'cfg_process',
        ['process_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.drop_index(op.f('ix_t_proc_data_count_process_id'), table_name='t_proc_data_count')

    op.add_column('cfg_process_column', sa.Column('english_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('cfg_process_column', sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('cfg_data_table_column', sa.Column('english_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('cfg_data_table_column', sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True))

    # no need to change anything in cfg_process.name

    # create view because we need english_name and name
    old_columns_table = sa.Table(
        CfgProcessColumn.__tablename__,
        sa.MetaData(),
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name', sa.Text()),
        sa.Column('english_name', sa.Text()),
    )
    columns = session.query(CfgProcessColumn).order_by(CfgProcessColumn.id).all()
    for column in columns:
        op.execute(
            old_columns_table.update()
            .where(old_columns_table.c.id == column.id)
            .values({'english_name': column.name_en, 'name': column.name_jp}),
        )

    session.commit()

    op.drop_column('cfg_process_column', 'name_local')
    op.drop_column('cfg_process_column', 'name_jp')
    op.drop_column('cfg_process_column', 'name_en')
    op.drop_column('cfg_process', 'name_local')
    op.drop_column('cfg_process', 'name_jp')
    op.drop_column('cfg_process', 'name_en')
    op.drop_column('cfg_data_table_column', 'name_local')
    op.drop_column('cfg_data_table_column', 'name_jp')
    op.drop_column('cfg_data_table_column', 'name_en')
    # ### end Alembic commands ###
