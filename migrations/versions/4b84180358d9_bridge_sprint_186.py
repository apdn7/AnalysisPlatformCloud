"""bridge_sprint_186

Revision ID: 4b84180358d9
Revises: 52e7f724317d
Create Date: 2023-07-07 14:29:17.581231

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4b84180358d9'
down_revision = '52e7f724317d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('t_cycle_id')
    op.drop_table('t_column_group')
    op.drop_index('ix_t_proc_link_link_value', table_name='t_proc_link')
    op.drop_table('t_proc_link')
    op.drop_table('t_data_float')
    op.drop_table('t_data_int')
    op.drop_table('t_data_text')
    op.drop_table('t_master_data')
    op.drop_table('t_data_datetime')
    op.drop_table('t_data_type_category')
    op.add_column('cfg_process', sa.Column('table_name', sa.Text(), nullable=True))
    op.add_column('cfg_process_column', sa.Column('bridge_column_name', sa.Text(), nullable=True))
    op.add_column('cfg_process_column', sa.Column('raw_data_type', sa.Text(), nullable=True))
    op.add_column('cfg_process_column', sa.Column('source_column_name', sa.Text(), nullable=True))
    op.drop_column('cfg_process_column', 'predict_type')
    op.add_column('m_data', sa.Column('is_hide', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('m_data', 'is_hide')
    op.add_column(
        'cfg_process_column',
        sa.Column('predict_type', sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_column('cfg_process_column', 'source_column_name')
    op.drop_column('cfg_process_column', 'raw_data_type')
    op.drop_column('cfg_process_column', 'bridge_column_name')
    op.drop_column('cfg_process', 'table_name')
    op.create_table(
        't_data_type_category',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('col_group_id', sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column('val_01', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_02', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_03', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_04', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_05', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_06', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_07', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_08', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_09', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column('val_10', sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id', name='t_data_type_category_pkey'),
    )
    op.create_table(
        't_data_datetime',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('col_group_id', sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column('val_01', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_02', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_03', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_04', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_05', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_06', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_07', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_08', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_09', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('val_10', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id', name='t_data_datetime_pkey'),
    )
    op.create_table(
        't_master_data',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('factory_machine_id', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('prod_part_id', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', name='t_master_data_pkey'),
    )
    op.create_table(
        't_data_text',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('col_group_id', sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column('val_01', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_02', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_03', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_04', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_05', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_06', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_07', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_08', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_09', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('val_10', sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id', name='t_data_text_pkey'),
    )
    op.create_table(
        't_data_int',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('col_group_id', sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column('val_01', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_02', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_03', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_04', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_05', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_06', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_07', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_08', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_09', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('val_10', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id', name='t_data_int_pkey'),
    )
    op.create_table(
        't_data_float',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('col_group_id', sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column('val_01', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_02', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_03', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_04', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_05', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_06', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_07', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_08', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_09', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('val_10', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'col_group_id', name='t_data_float_pkey'),
    )
    op.create_table(
        't_proc_link',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('link_key', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('link_value', sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'time', 'cycle_id', 'link_key', name='t_proc_link_pkey'),
    )
    op.create_index('ix_t_proc_link_link_value', 't_proc_link', ['link_value'], unique=False)
    op.create_table(
        't_column_group',
        sa.Column('process_id', sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column('col_group_id', sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column('data_type', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('col_01', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_02', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_03', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_04', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_05', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_06', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_07', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_08', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_09', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column('col_10', sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', 'col_group_id', 'data_type', name='t_column_group_pkey'),
    )
    op.create_table(
        't_cycle_id',
        sa.Column('process_id', sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column('latest_cycle_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('process_id', name='t_cycle_id_pkey'),
    )
    # ### end Alembic commands ###
