"""migrate path of files & folders to can use on linux system

Revision ID: dd55a99f9e6a
Revises: 793efe016cdf
Create Date: 2025-02-11 10:40:17.909486

"""
from alembic import op
from sqlalchemy.orm import Session

from ap.setting_module.models import CfgDataSourceCSV, CsvManagement

# revision identifiers, used by Alembic.
revision = 'dd55a99f9e6a'
down_revision = '793efe016cdf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())

    # Correct path in cfg_data_source_csv table
    results = session.query(CfgDataSourceCSV.id, CfgDataSourceCSV.directory).all()
    for id, directory in results:
        new_directory = directory.replace('\\', '/')
        op.execute(
            f'''
UPDATE {CfgDataSourceCSV.__tablename__}
SET {CfgDataSourceCSV.directory.name} = '{new_directory}'
WHERE {CfgDataSourceCSV.id.name} = {id};
''',
        )

    # Correct path in t_csv_management table
    results = session.query(CsvManagement.id, CsvManagement.file_name).all()
    for id, file_name in results:
        new_file_name = file_name.replace('\\', '/')
        op.execute(
            f'''
UPDATE {CsvManagement.__tablename__}
SET {CsvManagement.file_name.name} = '{new_file_name}'
WHERE {CsvManagement.id.name} = {id};
''',
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())

    # Rollback path in cfg_data_source_csv table
    results = session.query(CfgDataSourceCSV.id, CfgDataSourceCSV.directory).all()
    for id, directory in results:
        new_directory = directory.replace('/', '\\')
        op.execute(
            f'''
    UPDATE {CfgDataSourceCSV.__tablename__}
    SET {CfgDataSourceCSV.directory.name} = '{new_directory}'
    WHERE {CfgDataSourceCSV.id.name} = {id};
    ''',
        )

    # Rollback path in t_csv_management table
    results = session.query(CsvManagement.id, CsvManagement.file_name).all()
    for id, file_name in results:
        new_file_name = file_name.replace('/', '\\')
        op.execute(
            f'''
    UPDATE {CsvManagement.__tablename__}
    SET {CsvManagement.file_name.name} = '{new_file_name}'
    WHERE {CsvManagement.id.name} = {id};
    ''',
        )
    # ### end Alembic commands ###
